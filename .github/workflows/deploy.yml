name: Performance Testing and Deployment

on:
  push:
    branches: [ main, master ]
  release:
    types: [created]

jobs:
  performance-tests:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          build-essential \
          cmake \
          libgtest-dev \
          qt5-default \
          libsqlite3-dev \
          valgrind \
          perf-tools-unstable || true
        
    - name: Build with performance flags
      run: |
        cmake -B build \
          -DCMAKE_BUILD_TYPE=Release \
          -DENABLE_PERFORMANCE_METRICS=ON \
          -DCMAKE_CXX_FLAGS="-O3 -DNDEBUG"
        cmake --build build --parallel $(nproc)
        
    - name: Run performance tests
      run: |
        cd build
        ./performance_tests || true
        
    - name: Memory leak detection
      run: |
        cd build
        valgrind --leak-check=full \
          --show-leak-kinds=all \
          --track-origins=yes \
          ./tic_tac_toe_game --test-mode || true
        
    - name: Upload performance metrics
      uses: actions/upload-artifact@v3
      with:
        name: performance-metrics-${{ github.sha }}
        path: |
          build/performance-results.json
          build/memory-report.txt
        retention-days: 30

  deploy:
    needs: performance-tests
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Build release version
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=Release
        cmake --build build --parallel $(nproc)
        
    - name: Package application
      run: |
        cd build
        cpack -G TGZ
        
    - name: Create GitHub release
      uses: softprops/action-gh-release@v1
      with:
        files: build/*.tar.gz
        body: |
          Automated release of Advanced Tic Tac Toe Game
          
          Features:
          - User authentication and management
          - AI opponent with minimax algorithm
          - Game history tracking
          - SQLite database integration
          - Qt-based GUI
        
    - name: Deploy to staging
      if: success()
      run: |
        echo "Deployment to staging environment completed"
        # Add your deployment commands here
