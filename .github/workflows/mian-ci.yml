name: Advanced Tic Tac Toe CI â€“ Core Components Only

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

env:
  BUILD_TYPE: Release

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
        sudo apt-get update \
        sudo apt-get install -y qt5-default qttools5-dev qttools5-dev-tools \
          build-essential \
          cmake \
          libgtest-dev \
          ccache \
          clang-tidy \
          clang-format \
          pkg-config \
          gcovr

    - name: Configure CMake
      run: |
        cmake -B build \
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} \
          -DENABLE_TESTING=ON \
          -DCMAKE_CXX_COMPILER_LAUNCHER=ccache

    - name: Build project
      run: |
        cmake --build build \
          --config ${{ env.BUILD_TYPE }} \
          --parallel $(nproc)

    - name: Run core component tests
      working-directory: build
      timeout-minutes: 5
      run: |
        echo "Running core component tests..."
        ctest -C ${{ env.BUILD_TYPE }} \
          --output-on-failure \
          --verbose \
          --timeout 180

    - name: Run integration tests
      working-directory: build
      run: |
        echo "Running integration tests..."
        ctest -R Integration \
          -C ${{ env.BUILD_TYPE }} \
          --output-on-failure \
          --verbose

    - name: Generate test coverage
      if: success()
      run: |
        cd build
        gcovr --root .. --xml --output coverage.xml \
          --filter "../core/src/AIPlayer.cpp" \
          --filter "../core/src/GameBoard.cpp" \
          --filter "../core/src/GameHistory.cpp" \
          --filter "../core/src/GameStateStack.cpp" \
          --filter "../core/src/UserManager.cpp"

    - name: Upload coverage reports
      uses: codecov/codecov-action@v4
      with:
        file: coverage.xml
        fail_ci_if_error: false

    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results-${{ github.sha }}
        path: |
          build/Testing/
          build/coverage.xml
        retention-days: 7
